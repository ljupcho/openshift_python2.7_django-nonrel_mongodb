#!/usr/bin/env python
import os
import sys

sys.path.append(os.path.join(os.environ['OPENSHIFT_REPO_DIR']))
os.environ['DJANGO_SETTINGS_MODULE'] = 'blog.settings'

virtenv = os.environ['OPENSHIFT_HOMEDIR'] + 'python/virtenv/'
os.environ['PYTHON_EGG_CACHE'] = os.path.join(virtenv, 'lib/python2.7/site-packages')
 
virtualenv = os.path.join(virtenv, 'bin/activate_this.py')
try:
    execfile(virtualenv, dict(__file__=virtualenv))
except IOError:
    pass


import django.core.handlers.wsgi
sys.path.append(os.path.join(os.environ['OPENSHIFT_REPO_DIR'], 'blog' ))
_application = django.core.handlers.wsgi.WSGIHandler()


def application(environ, start_response):
    environ['PATH_INFO'] = environ['SCRIPT_NAME'] + environ['PATH_INFO']
    return _application(environ, start_response)
# 	ctype = 'text/plain'
# 	if environ['PATH_INFO'] == '/health':
# 		response_body = "1"
# 	elif environ['PATH_INFO'] == '/env':
# 		response_body = ['%s: %s' % (key, value)
#                     for key, value in sorted(environ.items())]
# 		response_body = '\n'.join(response_body)
# 	else:
# 		ctype = 'text/html'
# 		response_body = '''<!doctype html>
# <html lang="en">
# <head>
#   <meta charset="utf-8">
#   <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
#   <title>Ljupcho bloging</title>
#   <style>
#   html { 
#   background: black; 
#   }
#   body {
#     background: #333;
#     background: -webkit-linear-gradient(top, black, #666);
#     background: -o-linear-gradient(top, black, #666);
#     background: -moz-linear-gradient(top, black, #666);
#     background: linear-gradient(top, black, #666);
#     color: white;
#     font-family: "Helvetica Neue",Helvetica,"Liberation Sans",Arial,sans-serif;
#     width: 40em;
#     margin: 0 auto;
#     padding: 3em;
#   }
#   a {
#     color: white;
#   }
# 
#   h1 {
#     text-transform: capitalize;
#     -moz-text-shadow: -1px -1px 0 black;
#     -webkit-text-shadow: 2px 2px 2px black;
#     text-shadow: -1px -1px 0 black;
#     box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.5);
#     background: #CC0000;
#     width: 22.5em;
#     margin: 1em -2em;
#     padding: .3em 0 .3em 1.5em;
#     position: relative;
#   }
#   h1:before {
#     content: '';
#     width: 0;
#     height: 0;
#     border: .5em solid #91010B;
#     border-left-color: transparent;
#     border-bottom-color: transparent;
#     position: absolute;
#     bottom: -1em;
#     left: 0;
#     z-index: -1000;
#   }
#   h1:after {
#     content: '';
#     width: 0;
#     height: 0;
#     border: .5em solid #91010B;
#     border-right-color: transparent;
#     border-bottom-color: transparent;
#     position: absolute;
#     bottom: -1em;
#     right: 0;
#     z-index: -1000;
#   }
#   h2 { 
#     margin: 2em 0 .5em;
#     border-bottom: 1px solid #999;
#   }
# 
#   pre {
#     background: black;
#     padding: 1em 0 0;
#     -webkit-border-radius: 1em;
#     -moz-border-radius: 1em;
#     border-radius: 1em;
#     color: #9cf;
#   }
# 
#   ul { 
#     margin: 0; 
#     padding: 0;
#   }
#   li {
#     list-style-type: none;
#     padding: .5em 0;
#   }
# 
#   .brand {
#     display: block;
#     text-decoration: none;
#   }
#   .brand .brand-image {
#     float: left;
#     border:none;
#   }
#   .brand .brand-text {
#     float: left;
#     font-size: 24px;
#     line-height: 24px;
#     padding: 4px 0;
#     color: white;
#     text-transform: uppercase;
#   }
#   .brand:hover,
#   .brand:active {
#     text-decoration: underline;
#   }
# 
#   .brand:before,
#   .brand:after {
#     content: ' ';
#     display: table;
#   }
#   .brand:after {
#     clear: both;
#   }
#   </style>
# </head>
# <body>
# 
#   <h1>
#     Welcome to Ljupcho's Blog
#   </h1>
#   
#   
# </body>
# </html>'''
# 
# 	status = '200 OK'
# 	response_headers = [('Content-Type', ctype), ('Content-Length', str(len(response_body)))]
# 	#
# 	start_response(status, response_headers)
# 	return [response_body]

#
# Below for testing only
#
if __name__ == '__main__':
	from wsgiref.simple_server import make_server
	httpd = make_server('localhost', 8051, application)
	# Wait for a single request, serve it and quit.
	httpd.handle_request()
